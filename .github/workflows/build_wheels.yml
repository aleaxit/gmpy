name: Build Wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04-arm, macos-13, macos-14, macos-15, windows-2022]
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2.27.0
        name: Setup msys2
        with:
          install: >-
            mingw-w64-ucrt-x86_64-gcc
            autotools
          msystem: ucrt64
          path-type: inherit
        if: ${{ matrix.os == 'windows-2022' }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_ENABLE: pypy cpython-prerelease
          CIBW_SKIP: pp38* pp39* *-win32 *-manylinux_armv7l
          CIBW_BEFORE_ALL: bash scripts/cibw_before_all.sh
          CIBW_BEFORE_ALL_WINDOWS: msys2 -c scripts/cibw_before_all.sh
          CIBW_BEFORE_BUILD_WINDOWS: pip install wheel delvewheel
          CIBW_TEST_EXTRAS: tests
          CIBW_TEST_COMMAND: >
            pytest {package}/test/ &&
            python {package}/test_cython/runtests.py
          CIBW_REPAIR_WHEEL_COMMAND: >
            bash scripts/cibw_repair_wheel_command.sh {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
           scripts\cibw_repair_wheel_command_windows.bat {dest_dir} {wheel}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/
  merge:
    runs-on: ubuntu-22.04
    needs: build_wheels
    steps:
      - name: Merge Wheels
        uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          pattern: wheels-*
          delete-merged: true
